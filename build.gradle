
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.6'
    }
}
plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'org.lordofthejars.villains'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "io.vertx:vertx-core:3.4.1"
    compile "io.vertx:vertx-web:3.4.1"
    compile "io.vertx:vertx-rx-java:3.4.1"
    compile "com.h2database:h2:1.4.194"
    compile "io.vertx:vertx-jdbc-client:3.4.1"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

mainClassName = 'io.vertx.core.Launcher'
def mainVerticleName = 'org.lordofthejars.villains.crimes.CrimesVerticle'

// Vert.x watches for file changes in all subdirectories
// of src/ but only for files with .java extension
def watchForChange = 'src/**/*.java'

// Vert.x will call this task on changes
def doOnChange
if (System.getProperty("os.name").toLowerCase().contains("windows")) {
    doOnChange = '.\\gradlew classes'
} else {
    doOnChange = './gradlew classes'
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

shadowJar {
    archiveName = "crimes-service-${version}.jar"
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

apply plugin: 'com.bmuschko.docker-remote-api'
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

docker {
    if (System.env.containsKey('DOCKER_HOST') && System.env.containsKey('DOCKER_CERT_PATH')) {
        url = System.env.DOCKER_HOST.replace("tcp", "https")
        certPath = new File(System.env.DOCKER_CERT_PATH)
    }
}

task buildImage(type: DockerBuildImage) {
    dependsOn shadowJar
    inputDir = project.rootDir
    tag = "crimes:${project.version}"
}
